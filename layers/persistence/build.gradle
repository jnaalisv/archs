buildscript {
    dependencies {
        classpath "org.postgresql:postgresql:$postgreSqlVersion"
    }
}

plugins {
    id 'java-library'
    id "org.flywaydb.flyway" version "4.2.0"
    id 'nu.studer.jooq' version '2.0.6'
}

dependencies {
    jooqRuntime "org.postgresql:postgresql:$postgreSqlVersion"

    runtimeOnly "org.postgresql:postgresql:$postgreSqlVersion",
            logback_runtime

    implementation project(":model"),
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-orm:$springVersion",
            "org.hibernate:hibernate-core:$hibernateVersion",
            "com.zaxxer:HikariCP:$hikaricpVersion",
            "org.flywaydb:flyway-core:$flywayVersion",
            'org.jooq:jooq'

    testImplementation "junit:junit:$junitVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "org.springframework:spring-test:$springVersion"
}

sourceSets {
    test {
        resources {
            srcDirs += "$rootDir/shared/test/resources"
            srcDirs += "$rootDir/shared/logback"
        }
    }
}

ext.migrationDatabase = hasProperty( 'migrationDatabase' ) ? migrationDatabase : 'layers_db'
ext.migrationHost = hasProperty( 'migrationHost' ) ? migrationHost : 'localhost'
ext.migrationPort = hasProperty( 'migrationPort' ) ? migrationPort : '5432'

flyway {
    baselineOnMigrate=false
    baselineVersion=999
    url = 'jdbc:postgresql://' + migrationHost + ':'+ migrationPort + '/' + migrationDatabase
    user = 'layers_user'
    password = 'layers_user'
}

jooq {
    version = '3.9.2'
    edition = 'OSS'
    layers(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/layers_db'
            user = 'layers_user'
            password = 'layers_user'
//            properties {
//                property {
//                    key = 'ssl'
//                    value = 'true'
//                }
//            }
        }
        generator {
            name = 'org.jooq.util.DefaultGenerator'
            strategy {
                name = 'org.jooq.util.DefaultGeneratorStrategy'
                // ...
            }
            database {
                name = 'org.jooq.util.postgres.PostgresDatabase'
                inputSchema = 'public'
//                forcedTypes {
//                    forcedType {
//                        name = 'varchar'
//                        expression = '.*'
//                        types = 'JSONB?'
//                    }
//                    forcedType {
//                        name = 'varchar'
//                        expression = '.*'
//                        types = 'INET'
//                    }
//                }
                // ...
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
                // ...
            }
            target {
                packageName = 'layers.persistence.jooq'
                directory = 'src/main/java'
            }
        }
    }
}
